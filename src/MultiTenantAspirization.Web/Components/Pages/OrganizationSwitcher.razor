@page "/organizations"
@using Microsoft.AspNetCore.Components.Authorization
@using MultiTenantAspirization.Web.Services
@inject HttpClient HttpClient
@inject CurrentOrganizationService OrgService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <div class="mb-3">
            <label for="orgSelect" class="form-label">Organization:</label>
            <select id="orgSelect" class="form-select" @bind="selectedOrgId" @bind:after="OnOrgChanged">
                @foreach (var org in organizations)
                {
                    <option value="@org.Id">@org.Name</option>
                }
            </select>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You need to be logged in to view organizations.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<Organization> organizations = [];
    private Guid? selectedOrgId;

    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState != null)
        {
            var authState = await AuthState;
            var userId = authState.User.FindFirst("sub")?.Value;
            
            if (!string.IsNullOrEmpty(userId))
            {
                organizations = await HttpClient.GetFromJsonAsync<List<Organization>>(
                    $"api/organizations?userId={userId}") ?? [];
                
                if (organizations.Any())
                {
                    selectedOrgId = organizations[0].Id;
                    OrgService.SetCurrentOrganizationId(selectedOrgId.Value);
                }
            }
        }
    }

    private void OnOrgChanged()
    {
        if (selectedOrgId.HasValue)
        {
            OrgService.SetCurrentOrganizationId(selectedOrgId.Value);
            NavigationManager.NavigateTo("/weather");  // Redirect to weather page
        }
    }
    
    public class Organization
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = null!;
    }
}

